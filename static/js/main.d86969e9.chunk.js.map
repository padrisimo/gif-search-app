{"version":3,"sources":["utils/masonry.js","constants/index.js","api/index.js","reducers/dataFetchReducer.js","hooks/useApi.js","components/Form/Form.js","components/Form/Button.js","components/Form/SearchInput.js","components/Form/HeaderHolder.js","components/AppWrapper/index.js","components/ImageItem/index.js","components/BrickLayout/index.js","components/App.js","hooks/useMedia.js","index.js"],"names":["getMasonryConfig","masonryConfig","map","c","columns","imageWidth","gutter","reverse","getMasonryConfigExceptLast","returnedMasonryConfig","slice","length","getDefaultMasonryConfig","getMediaBreakpoints","mq","filter","i","stolenKey","gifPerPage","apiUrl","offset","query","apiEndpoint","dataFetchReducer","state","action","payload","pagination","type","loading","error","lastPage","data","total_count","count","Error","useApi","useReducer","dispatch","url","isMore","axios","get","then","response","catch","Form","styled","form","SwagButton","button","Button","title","onHandleSubmit","data-testid","onClick","disabled","Input","input","SearchInput","onHandleQuery","value","onChange","placeholder","name","required","HeaderHolder","div","AppWrapper","ImageButton","size","item","images","fixed_width_downsampled","height","width","Img","img","ImageItem","onSelect","alt","src","BrickLayout","children","sizes","container","useRef","useEffect","bricks","Bricks","current","packed","position","resize","Children","pack","ref","App","useState","setQuery","firstRun","setFirstRun","isFirstRun","fetch","api","masonryConfigMatchMedia","queries","values","defaultValue","mediaQueryLists","q","window","matchMedia","getValue","index","findIndex","mql","matches","setValue","handler","forEach","addListener","removeListener","useMedia","e","target","a","async","preventDefault","pageStart","loadMore","page","hasMore","useWindow","initialLoad","loader","key","style","color","id","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d86969e9.chunk.js","sourcesContent":["export const getMasonryConfig = masonryConfig =>\n  masonryConfig\n    .map(c => ({\n      columns: c.columns,\n      imageWidth: c.imageWidth,\n      gutter: c.gutter,\n    }))\n    .reverse()\n\nexport const getMasonryConfigExceptLast = masonryConfig => {\n  const returnedMasonryConfig = getMasonryConfig(masonryConfig)\n\n  return returnedMasonryConfig.slice(0, returnedMasonryConfig.length - 1)\n}\n\nexport const getDefaultMasonryConfig = masonryConfig => {\n  const returnedMasonryConfig = getMasonryConfig(masonryConfig)\n\n  return returnedMasonryConfig[returnedMasonryConfig.length - 1]\n}\n\nexport const getMediaBreakpoints = masonryConfig =>\n\n  masonryConfig\n    .map(c => c.mq && `(min-width: ${c.mq})`)\n    .filter(i => i != null)\n    .reverse()\n\nexport const getComponentWrapperWidth = masonryConfig =>\n  masonryConfig.imageWidth * masonryConfig.columns +\n  masonryConfig.gutter * (masonryConfig.columns - 1)\n","/* eslint-disable import/prefer-default-export */\nexport const stolenKey = '9Ixlv3DWC1biJRI57RanyL7RTbfzz0o7';\nexport const masonryConfig = [\n  { mq: '480px', columns: 1, imageWidth: 480, gutter: 1 },\n  { mq: '600px', columns: 2, imageWidth: 280, gutter: 3 },\n  { mq: '700px', columns: 3, imageWidth: 200, gutter: 5 },\n  { mq: '900px', columns: 4, imageWidth: 180, gutter: 5 },\n  { mq: '1280px', columns: 6, imageWidth: 200, gutter: 9 }\n];\nexport const gifPerPage = 40;\n","import { stolenKey, gifPerPage } from '../constants';\n\nexport default {\n  apiUrl: (offset = 0, query = '') => {\n    const apiEndpoint = query ? 'search' : 'trending';\n    return `https://api.giphy.com/v1/gifs/${apiEndpoint}?api_key=${stolenKey}&limit=${gifPerPage}&rating=g&offset=${offset}&q=${query}`;\n  }\n};\n","const dataFetchReducer = (state, action) => {\n  const { payload, pagination } = action;\n\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        lastPage: false,\n        data: []\n      };\n    case 'FETCH_MORE_INIT':\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        lastPage: false\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: payload,\n        lastPage: pagination.total_count - pagination.offset <= pagination.count\n      };\n    case 'FETCH_MORE_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: [...state.data, ...payload],\n        lastPage: pagination.total_count - pagination.offset <= pagination.count\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        lastPage: false\n      };\n    default:\n      throw new Error('Unknown action type');\n  }\n};\n\nexport default dataFetchReducer;\n","import { useReducer } from 'react';\nimport axios from 'axios';\nimport dataFetchReducer from '../reducers/dataFetchReducer';\n\nconst useApi = () => {\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    loading: false,\n    error: false,\n    data: [],\n    lastPage: false\n  });\n\n  const fetch = (url, isMore) => {\n    if (isMore) {\n      dispatch({ type: 'FETCH_MORE_INIT' });\n    } else {\n      dispatch({ type: 'FETCH_INIT' });\n    }\n\n    axios\n      .get(url)\n      .then(response => {\n        if (isMore) {\n          dispatch({\n            type: 'FETCH_MORE_SUCCESS',\n            payload: response.data.data,\n            pagination: response.data.pagination\n          });\n        } else {\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: response.data.data,\n            pagination: response.data.pagination\n          });\n        }\n      })\n      .catch(() => {\n        dispatch({ type: 'FETCH_FAILURE' });\n      });\n  };\n\n  return [state, fetch];\n};\n\nexport default useApi;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  background: tomato;\n  position: fixed;\n  width: 100%;\n  z-index: 1;\n  padding: .5rem;\n`;\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst SwagButton = styled.button`\n  cursor: pointer;\n  background: transparent;\n  border: 1px solid white;\n  border-radius: 25px;\n  color: white;\n  padding: 1rem 4rem;\n  margin-left: 1rem;\n\n  &:hover:enabled {\n    background: white;\n    color: tomato;\n  }\n  &:disabled {\n    color: lightgrey;\n    border-color: lightgrey;\n    cursor: not-allowed;\n  }\n`;\n\nconst Button = ({ title, onHandleSubmit, query }) => (\n  <SwagButton\n    data-testid=\"Button\"\n    type=\"submit\"\n    onClick={onHandleSubmit}\n    disabled={!query}\n  >\n    {title}\n  </SwagButton>\n);\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  onHandleSubmit: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  padding: 1.5em;\n  border: 0;\n  border-radius: 25px;\n`;\n\nconst SearchInput = ({ onHandleQuery, query }) => (\n  <Input\n    value={query}\n    onChange={onHandleQuery}\n    placeholder=\"search gif\"\n    type=\"text\"\n    name=\"query\"\n    data-testid=\"SearchInput\"\n    required\n  />\n);\n\nSearchInput.propTypes = {\n  onHandleQuery: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired\n};\n\nexport default SearchInput;\n","import styled from 'styled-components';\n\nconst HeaderHolder = styled.div`\n    height: 70px;\n\n`;\n\nexport default HeaderHolder;","import styled from 'styled-components';\n\nconst AppWrapper = styled.div`\n  min-height: 100vh;\n  width: 100vw;\n  display: flex;\n  align-items: center;\n  flex-direction:column;\n`;\n\nexport default AppWrapper;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst ImageButton = styled.button`\n  background: tomato;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  width: ${({ size }) => size}px;\n  height: ${({ size, item }) =>\n    (item.images.fixed_width_downsampled.height * size) /\n    item.images.fixed_width_downsampled.width}px;\n  overflow: hidden;\n  &:focus {\n    opacity: 0.6;\n  }\n\n`;\n\nconst Img = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n`;\n\nconst ImageItem = ({ item, size, onSelect }) => (\n  <ImageButton\n    data-testid=\"ImageItemButton\"\n    type=\"button\"\n    size={size}\n    item={item}\n    onClick={() => onSelect(item)}\n  >\n    <Img\n      data-testid=\"ImageItemImage\"\n      width={item.images.fixed_width_downsampled.width}\n      height={item.images.fixed_width_downsampled.height}\n      alt={item.title}\n      src={item.images.fixed_width_downsampled.url}\n    />\n  </ImageButton>\n);\n\nImageItem.propTypes = {\n  item: PropTypes.instanceOf(Object).isRequired,\n  size: PropTypes.number.isRequired,\n  onSelect: PropTypes.func.isRequired\n};\n\nexport default ImageItem;\n","/* eslint-disable react/forbid-prop-types */\nimport React, { useRef, useEffect, Children } from 'react';\nimport Bricks from 'bricks.js';\nimport PropTypes from 'prop-types';\n\nconst BrickLayout = ({ children, sizes }) => {\n  const container = useRef(null);\n\n  useEffect(() => {\n    const bricks = Bricks({\n      container: container.current,\n      packed: 'data-packed',\n      sizes,\n      position: true\n    });\n\n    bricks.resize(true);\n\n    if (Children.count(children) > 0) {\n      bricks.pack();\n    }\n  }, [children]);\n\n  return (\n    <div ref={container} data-testid=\"BrickLayoutContainer\">\n      {children}\n    </div>\n  );\n};\n\nBrickLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  sizes: PropTypes.instanceOf(Array).isRequired\n};\n\nexport default BrickLayout;\n","import React, { useState, useRef, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport {\n  getDefaultMasonryConfig,\n  getMasonryConfigExceptLast,\n  getMediaBreakpoints\n} from '../utils/masonry';\nimport { masonryConfig, gifPerPage } from '../constants';\nimport api from '../api';\nimport useApi from '../hooks/useApi';\nimport useMedia from '../hooks/useMedia';\nimport { SearchInput, Button, Form, HeaderHolder } from './Form';\nimport AppWrapper from './AppWrapper';\nimport ImageItem from './ImageItem';\nimport BrickLayout from './BrickLayout';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [firstRun, setFirstRun] = useState(true);\n  const isFirstRun = useRef(true);\n  const [{ data, loading, lastPage }, fetch] = useApi();\n\n  const handleQuery = e => setQuery(e.target.value);\n\n  useEffect(() => {\n    fetch(api.apiUrl(0, query));\n\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      setFirstRun(false);\n    }\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await fetch(api.apiUrl(0, query));\n  };\n\n  const masonryConfigMatchMedia = useMedia(\n    getMediaBreakpoints(masonryConfig),\n    getMasonryConfigExceptLast(masonryConfig),\n    getDefaultMasonryConfig(masonryConfig)\n  );\n\n  return (\n    <>\n    <Form>\n        <SearchInput onHandleQuery={handleQuery} query={query} />\n        <Button title=\"Search\" query={query} onHandleSubmit={handleSubmit} />\n      </Form>\n      <AppWrapper>\n      <HeaderHolder />\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={page => query && fetch(api.apiUrl(page * gifPerPage), query)}\n        hasMore={!loading && !lastPage}\n        useWindow\n        initialLoad={false}\n        loader={\n          (!firstRun && query) && (\n            <div key=\"loading\" style={{ color: 'white' }}>\n              loading...\n            </div>\n          )\n        }\n      >\n        {data.length > 0 && (\n          <BrickLayout sizes={masonryConfig}>\n            {data.map(item => (\n              <ImageItem\n                item={item}\n                size={masonryConfigMatchMedia.imageWidth}\n                key={item.id}\n                // eslint-disable-next-line no-console\n                onSelect={() => console.log(item)}\n              />\n            ))}\n          </BrickLayout>\n        )}\n      </InfiniteScroll>\n    </AppWrapper>\n    </>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport default function useMedia(queries, values, defaultValue) {\n  const mediaQueryLists = queries.map(q => window.matchMedia(q));\n\n  const getValue = () => {\n    const index = mediaQueryLists.findIndex(mql => mql.matches);\n    return typeof values[index] !== 'undefined' ? values[index] : defaultValue;\n  };\n\n  const [value, setValue] = useState(getValue);\n\n  useEffect(() => {\n    const handler = () => setValue(getValue);\n\n    mediaQueryLists.forEach(mql => mql.addListener(handler));\n\n    return () => mediaQueryLists.forEach(mql => mql.removeListener(handler));\n  }, []);\n\n  return value;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}